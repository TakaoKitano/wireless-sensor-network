詳細は以下のリンクより「無線タグ」に記載します。
http://tocos-wireless.com/jp/products/TWE-ZERO/index.html

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
以下は、公式資料化していない情報です。内容の正確性は保証しません。

＝＝＝ IO監視 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
磁気スイッチなどを利用し、例えば、扉が空いたときに電波を発信したり、扉があけ放しになった時
更に警告します。

■ 振る舞い
DI1 が LO>HI へ遷移すると起床します。
 (例: ドアに磁気スイッチ[リードスイッチ]を仕込んでおいて、ドアが開いた)

初回は、DI1 の変化を無線送信します。

以後 1 秒置きに起床し、DI1 の状態を監視し、起床ごとに以下を実施します。
・入力が LO に戻っていれば、LOに戻った旨を送信し、割り込み待ちスリープに入ります。
・初回より Sleep Dur 秒経過すると、開け放し警告を行います。
  警告は 1) 無線送信、2) PWM出力 (1KHz, 100ms) となります。

■ ピン
DO1  : DOI18 : 外部電源制御 (電源投入後、速やかに LO に落ちる)
DO2  : DIO19 : 出力ピン。
DO3  : DIO04 : 稼働中 LO になる。

DI1  : DIO12 : 入力監視ピン (L>Hにより起床、H維持を監視)
               ※内部プルアップはオフになっています。外部によるプルアップを行ってください。

PWM1 : DIO05 : 開け放し警告時のブザー駆動パルス

TX   : DIO06 : UART TX ピン
RX   : DIO07 : UART RX ピン

■ 回路

      +-- (プルアップ抵抗) --- VCC
DI1 --+-- (リードスイッチ) --- GND

PWM1 ---(圧電ブザー)--- VCC


※ プルアップ抵抗は、1MΩといった大きな値を推奨 (1MΩで 2-3μA消費する)
※ 磁気スイッチ（リードスイッチ）は、外部回路の無いものを選んでください
   (例：LED付きのものは、正しく動作しない場合があります)

■ 設定について
 p: set Sleep Dur (5000)
    開け放し警告までの時間を ms で指定します。


＝＝＝ UART ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
UART のコマンドを入力後、パケット送信を行い、再びスリープします。

■ 振る舞い
コールドブート（初回起動、リセット後）は、初期化後、速やかにスリープします。
その後 DI1 の H>L 割り込みにより起床し、Sleep Dur 期間の間、コマンドを待ち
コマンドが入力されれば、送信を行います。タイムアウトすると再びスリープします。

■ ピン
DI1  : DIO12 : 割り込み起床ピン (スリープからの強制起床, H>L で起床)

TX   : DIO06  : UART TX ピン
RX   : DIO07  : UART RX ピン
RTS  : DIO05  : 入力可能ピン (UART 入力が可能になると LO に落ちます)

■ 設定
 p: set Sleep Dur (5000)
    UART のコマンド入力タイムアウトを設定します

 w: set Sensor Wait Dur (30)
    １桁目：アプリケーション再送回数
    ２桁目以降：アプリケーション再送のウェイト(10倍の長さ[ms]となる)

    例えば 52 と設定すると 500 ms おきに２回再送する(都合３回)

 オプション 0x00000200
   Binary 形式で入出力する(設定しなければ ASCII 形式)

■ 送信データ
App_UART と同じ形式であるが、データの中身は評価せず、そのまま親機に送信する。

  :0011223344X                     <= ASCII 形式 (チェックサム省略)
  A5 5A 80 05 00 11 22 33 44 <XOR> <= Binary 形式

■ 親機
オプションを 0x00000100 または 0x00000300(Binary形式) に設定します。

・始動時メッセージ
  バイナリ形式では以下のような出力が得られる
  A5 5A                      <= ヘッダ
  80 1B                      <= データ長 (XOR チェックサム手前まで)
  "Samp_Monitor" 00 00 00 00 <= 16バイト、アプリケーション名
  01 02 05                   <= バージョン番号
  67 72 63 05                <= アプリケーションID
  81 00 1F 1C                <= モジュールアドレス
  CB                         <= XOR チェックサム
  04                         <= 終端

・UART 受信メッセージ
  バイナリ形式では以下のような出力が得られる
  A5 5A       <= ヘッダ
  80 12       <= データ長 (XOR チェックサム手前まで)
  80 00 00 00 <= 受信機のアドレス (80000000 は親機)
  84          <= 最初に受信した受信機のLQI
  00 11       <= フレームカウント
  81 00 00 38 <= 送信機のアドレス
  00          <= 送信機の論理アドレス
  04          <= パケット種別 04=UART
  04          <= ペイロードのバイト数
  81 00 00 38 <= データ部 (たまたま送信機のアドレスをそのまま送信した)
  15          <= XOR チェックサム
  04          <= 終端
